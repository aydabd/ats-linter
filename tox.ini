[tox]
minversion = 3.3
envlist = py3{8,9,10,11}, lint, docs, linkcheck, doctests
isolated_build = True
requires = tox-conda

[testenv]
description = Invoke pytest to run automated tests
parallel_show_output = False
allowlist_externals =
    rm
    sh
    sphinx-build
sitepackages = False
conda_channels =
    conda-forge
setenv =
    TOXINIDIR = {toxinidir}
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    py3{8,9,10,11}: COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    HOME
    SETUPTOOLS_*
    py3{8,9,10,11}: PYTEST_*
conda_deps =
    py3{8,9,10,11}: pytest
    py3{8,9,10,11}: pytest-cov
    py3{8,9,10,11}: pytest-mock
    py3{8,9,10,11}: pytest-fixture-config
    py3{8,9,10,11}: setuptools_scm
    py3{8,9,10,11}: setuptools
commands =
    # run pytest with coverage reporting with junitxml output inside COVERAGE_FILE
    python -m pytest --cov --cov-branch --junitxml={env:COVERAGE_FILE}.xml --cov-report=term {posargs}

[testenv:clean]
description =
    Clean the entire project from build, dist, cache files and coverage and .tox envs
    But not .tox/clean env
skip_install = True
skipsdist = True
usedevelop = False
basepython = python3
deps =
conda_deps =
    aiofiles
setenv =
passenv =
commands_pre =
commands =
commands_post =
    python {toxinidir}/project_cleaner.py

[testenv:lint]
description = Perform static analysis and style checks
parallel_show_output = False
skip_install = True
conda_deps = pre-commit
passenv =
    HOMEPATH
    PROGRAMDATA
    SETUPTOOLS_*
# Uncomment the following line to enable pre-commit to auto update the hooks
#commands_pre =
#    pre-commit autoupdate
commands =
    {posargs:pre-commit run --all-files}

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = True
skipsdist = True
passenv =
    SETUPTOOLS_*
conda_deps =
    build: pip
    build: build
    build: setuptools_scm
commands_pre =
    clean,build: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean,build: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
commands =
    build: python -m build --wheel --outdir {toxinidir}/dist {posargs}

[testenv:conda-package]
description =
    Build the conda package
skip_install = True
conda_deps =
    conda-build
    conda-verify

commands =
    conda build conda-recipe
commands_post =
    conda build purge

[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
parallel_show_output = False
skip_install = True
basepython = python3
passenv =
    SETUPTOOLS_*
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxworkdir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
conda_deps =
    sphinx
    sphinx-autodoc-typehints
    sphinx-rtd-theme
commands =
    sphinx-build -W --keep-going --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}
    python3 -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs/_build/html" / "index.html"))'

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_REPOSITORY_URL
conda_deps =
    twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
