[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61",
  "setuptools_scm[toml]>=6.2",
]

[tool.setuptools_scm]
version_scheme = "post-release"

[project]
name = "ats-linter"
description = "Automated test schema linter"
authors = [
    {name = "Aydin Abdi", email = "ayd.abd@gmail.com"},
]
requires-python = ">=3.11"
readme = "README.rst"
license = "MIT"
license-files = ["LICENSE", "LICENSE"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Utilities",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "loguru",
]
dynamic = [
    "version",
]
keywords = ["automation", "test", "lint", "ats-linter", "pytest", "unittest"]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-mock",
    "pytest-asyncio",
    "pre-commit",
]

[project.urls]
Documentation = "https://ats-linter.readthedocs.io"
Download = "https://pypi.python.org/pypi/ats-linter"
Repository = "https://github.com/aydabd/ats-linter"

[project.scripts]
ats-linter = "ats_linter.cli:run"

[tool.coverage.run]
source = ["src/ats_linter"]
omit = [
        "**/site-packages/**",
        "**/distutils/**",
        "**/tests/**"
]
branch = true
disable_warnings = ["no-data-collected"]

[tool.coverage.report]
fail_under = 10
omit = ["tests/*"]
exclude_lines = [
        "pragma: no cover",
        "def __repr__",
        "if self\\.debug",
        "raise AssertionError",
        "raise NotImplementedError",
        "if 0:",
        "if __name__ == .__main__.:"
]
show_missing = true
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.junit]
output = "coverage.xml"

[tool.codespell]
ignore-words = ".codespell-ignore"

[tool.ruff]
line-length = 88
extend-exclude = [
    "__init__.py",
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py",
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pydocstyle
    "D",
]
ignore = ["E203"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "D101", "D1", "S1",
    "ANN201", "ANN204", "D4",
    "D207", "D205", "INP001",
    "ANN001", "ARG002", "PLR2004",
    "EXE002", "ARG005", "ERA001", "ARG001",
    "ANN202", "EM101", "TRY003"]

[tool.ruff.isort]
known-first-party = ["ats_linter"]
known-third-party = ["pytest", "loguru"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"
